##-------------------------------------------------------------------------------------------------
# object:  IAM/Role/Instance
# class:   resource
##-------------------------------------------------------------------------------------------------
RoleInstance:
  Type: "AWS::IAM::Role"
  Properties:
    RoleName: !Join [ "", [ "ec2", "_", !Select [1, !Split ["|", !Ref "Project"]], "-", !Select [1, !Split ["|", !Ref "Function"]], "-", !Select [3, !Split ["|", !Ref "Organization"]], "-", !Select [1, !Split ["|", !Ref "Organization"]], "_", !Ref "AWS::Region" ] ]
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
              - "ec2.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Path: !Join [ "", [ "/", !Ref "AWS::Region", "/" ] ]
    Policies:
      -
        PolicyName: !Join [ "", [ "ec2", "_", !Select [1, !Split ["|", !Ref "Project"]], "-", !Select [1, !Split ["|", !Ref "Function"]], "-", !Select [3, !Split ["|", !Ref "Organization"]], "-", !Select [1, !Split ["|", !Ref "Organization"]], "_", !Ref "AWS::Region" ] ]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            ##-----------------------------------------------------------------------------------------------------------------------------------------
            ## CloudFormation
            - Effect: "Allow"
              Action:
                - "cloudformation:DescribeStacks"
              Resource: "*"

            ##-----------------------------------------------------------------------------------------------------------------------------------------
            ## SSM
            - Effect: "Allow"
              Action:
                - "ssm:DescribeAssociation"
                - "ssm:GetDeployablePatchSnapshotForInstance"
                - "ssm:GetDocument"
                - "ssm:DescribeDocument"
                - "ssm:GetManifest"
                - "ssm:GetParameters"
                - "ssm:ListAssociations"
                - "ssm:ListInstanceAssociations"
                - "ssm:PutInventory"
                - "ssm:PutComplianceItems"
                - "ssm:PutConfigurePackageResult"
                - "ssm:UpdateAssociationStatus"
                - "ssm:UpdateInstanceAssociationStatus"
                - "ssm:UpdateInstanceInformation"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - "ssmmessages:CreateControlChannel"
                - "ssmmessages:CreateDataChannel"
                - "ssmmessages:OpenControlChannel"
                - "ssmmessages:OpenDataChannel"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - "s3:GetEncryptionConfiguration"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - "s3:GetObject"
              Resource:
                - !Join [ "", [ "arn:aws:s3:::", "aws-ssm-", !Ref "AWS::Region", "/*" ] ]
                - !Join [ "", [ "arn:aws:s3:::", "amazon-ssm-", !Ref "AWS::Region", "/*" ] ]
                - !Join [ "", [ "arn:aws:s3:::", "amazon-ssm-packages-", !Ref "AWS::Region", "/*" ] ]
                - !Join [ "", [ "arn:aws:s3:::", !Ref "AWS::Region", "-birdwatcher-prod", "/*" ] ]
                - !Join [ "", [ "arn:aws:s3:::", "patch-baseline-snapshot-", !Ref "AWS::Region", "/*" ] ]

            ##-----------------------------------------------------------------------------------------------------------------------------------------
            ## Logging
            - Effect: "Allow"
              Action:
                - "ec2messages:AcknowledgeMessage"
                - "ec2messages:DeleteMessage"
                - "ec2messages:FailMessage"
                - "ec2messages:GetEndpoint"
                - "ec2messages:GetMessages"
                - "ec2messages:SendReply"
                - "cloudwatch:PutMetricData"
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:DescribeLogGroups"
                - "logs:DescribeLogStreams"
                - "logs:PutLogEvents"
              Resource: "*"

            ##-----------------------------------------------------------------------------------------------------------------------------------------
            ## Security
            - Effect: "Allow"
              Action:
                - "iam:ListUsers"
                - "iam:GetGroup"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - "ssm:GetParametersByPath"
                - "ssm:GetParameter"
                - "ssm:GetParameters"
              Resource:
                - !Join [ "", [ "arn:aws:ssm:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":parameter/secrets/", !Select [1, !Split ["|", !Ref "Project"]], "/", !Select [1, !Split ["|", !Ref "Function"]], "/", !Select [3, !Split ["|", !Ref "Organization"]], "/*" ] ]
                - !Join [ "", [ "arn:aws:ssm:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":parameter/secrets/", !Select [1, !Split ["|", !Ref "Project"]], "/", "global", "/", !Select [3, !Split ["|", !Ref "Organization"]], "/*" ] ]
            - Effect: "Allow"
              Action:
                - "kms:Decrypt"
              Resource:
                - !GetAtt "StackReferenceResultsVPC.KMSKeyData"
                - !GetAtt "StackReferenceResultsVPC.KMSKeyAliasData"

            ##-----------------------------------------------------------------------------------------------------------------------------------------
            ## CodeDeploy
            - !If
                - ExistsStackReferenceCodeDeploy
                - Effect: "Allow"
                  Action:
                    - "s3:Get*"
                    - "s3:List*"
                  Resource:
                    - "arn:aws:s3:::aws-codedeploy-us-east-1/*"
                    - "arn:aws:s3:::aws-codedeploy-us-west-2/*"
                - !Ref "AWS::NoValue"
            - !If
                - ExistsStackReferenceCodeDeploy
                - Effect: "Allow"
                  Action:
                    - "s3:Get*"
                    - "s3:List*"
                  Resource:
                    - !Join [ "", [ "arn:aws:s3:::", !Ref "AWS::AccountId", "-", "artifacts", "-", !Ref "AWS::Region" ] ]
                    - !Join [ "", [ "arn:aws:s3:::", !Ref "AWS::AccountId", "-", "artifacts", "-", !Ref "AWS::Region", "/*" ] ]
                - !Ref "AWS::NoValue"
            - !If
                - ExistsStackReferenceCodeDeploy
                - Effect: "Allow"
                  Action:
                    - "s3:GetObject*"
                    - "s3:ListBucket*"
                  Resource:
                    - !Join [ "", [ "arn:aws:s3:::", !Ref "AWS::AccountId", "-", "artifacts", "-", !Ref "AWS::Region", "/codedeploy/", !GetAtt "StackReferenceResultsCodeDeploy.CodeDeployApplicationName" ] ]
                    - !Join [ "", [ "arn:aws:s3:::", !Ref "AWS::AccountId", "-", "artifacts", "-", !Ref "AWS::Region", "/codedeploy/", !GetAtt "StackReferenceResultsCodeDeploy.CodeDeployApplicationName", "/*" ] ]
                - !Ref "AWS::NoValue"
  DependsOn:
    - "StackReferenceResultsVPC"
