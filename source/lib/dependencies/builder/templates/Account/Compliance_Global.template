##-------------------------------------------------------------------------------------------------
# object: Account/Compliance_Global
# notes:
#   - CIS Amazon Web Services Foundations
#     - 1.1: Avoid the use of the "root" account
#     - 1.2: Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password
#     - 1.3: Ensure credentials unused for 90 days or greater are disabled
#     - 1.4: Ensure access keys are rotated every 90 days or less
#     - 1.5: Ensure IAM password policy requires at least one uppercase letter
#     - 1.6: Ensure IAM password policy require at least one lowercase letter
#     - 1.7: Ensure IAM password policy require at least one symbol
#     - 1.8: Ensure IAM password policy require at least one number
#     - 1.9: Ensure IAM password policy requires minimum length of 14 or greater
#     - 1.10: Ensure IAM password policy prevents password reuse
#     - 1.11: Ensure IAM password policy expires passwords within 90 days or less
#     - 1.12: Ensure no root account access key exists
#     - 1.13: Ensure MFA is enabled for the "root" account
#     - 1.14: Ensure hardware MFA is enabled for the "root" account
#     - 1.16: Ensure IAM policies are attached only to groups or roles
#     - 1.19: Ensure IAM instance roles are used for AWS resource access from instances
#     - 1.22: Ensure IAM policies that allow full "*:*" administrative privileges are not created
#     - 2.1: Ensure CloudTrail is enabled in all regions
#     - 2.2: Ensure CloudTrail log file validation is enabled
#     - 2.3: Ensure the S3 bucket CloudTrail logs to is not publicly accessible
#     - 2.4: Ensure CloudTrail trails are integrated with CloudWatch Logs
#     - 2.5: Ensure AWS Config is enabled in all regions
#     - 2.6: Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket
#     - 2.7: Ensure CloudTrail logs are encrypted at rest using KMS CMKs
#     - 3.1: Ensure a log metric filter and alarm exist for unauthorized API calls
#     - 3.2: Ensure a log metric filter and alarm exist for Management Console sign-in without MFA
#     - 3.3: Ensure a log metric filter and alarm exist for usage of "root" account
#     - 3.4: Ensure a log metric filter and alarm exist for IAM policy changes
#     - 3.5: Ensure a log metric filter and alarm exist for CloudTrail configuration changes
#     - 3.6: Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
#     - 3.7: Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
#     - 3.8: Ensure a log metric filter and alarm exist for S3 bucket policy changes
#     - 3.9: Ensure a log metric filter and alarm exist for AWS Config configuration changes
#     - 3.10: Ensure a log metric filter and alarm exist for security group changes
#     - 3.11: Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
#     - 3.12: Ensure a log metric filter and alarm exist for changes to network gateways
#     - 3.13: Ensure a log metric filter and alarm exist for route table changes
#     - 3.14: Ensure a log metric filter and alarm exist for VPC changes
##-------------------------------------------------------------------------------------------------

Paradigm:
##-------------------------------------------------------------------------------------------------
  Parameters:
    #-- Stack Reference -----------------------------------------------------------------
    - Base/StackReference/StackReferenceInitialize

    #-- SNS -----------------------------------------------------------------------------
    - Base/SNS/SNSSubscriptionEmail1
    - Base/SNS/SNSSubscriptionEmail2
    - Base/SNS/SNSSubscriptionEmail3
    - Base/SNS/SNSSubscriptionEmail4

##-------------------------------------------------------------------------------------------------
  Mappings:

##-------------------------------------------------------------------------------------------------
  Conditions:
    #-- SNS -----------------------------------------------------------------------------
    - Base/SNS/ExistsSNSSubscriptionEmail1
    - Base/SNS/ExistsSNSSubscriptionEmail2
    - Base/SNS/ExistsSNSSubscriptionEmail3
    - Base/SNS/ExistsSNSSubscriptionEmail4

##-------------------------------------------------------------------------------------------------
  Resources:
    #-- Stack Reference -----------------------------------------------------------------
    - Base/Custom/StackReferenceResultsInitialize

    #-- SNS -----------------------------------------------------------------------------
    - Base/SNS/Topic/Audit
    - Base/SNS/Subscription/AuditEmail1
    - Base/SNS/Subscription/AuditEmail2
    - Base/SNS/Subscription/AuditEmail3
    - Base/SNS/Subscription/AuditEmail4

    #-- IAM -----------------------------------------------------------------------------
    - Base/IAM/Role/LambdaFunctionConfig

    #-- AuditFormatCloudWatchEvent ------------------------------------------------------
    - Base/Lambda/Function/AuditFormatCloudWatchEvent
    - Base/Lambda/Permission/AuditFormatCloudWatchEvent
    - Base/IAM/Role/LambdaFunctionAuditFormatCloudWatchEvent
    - Base/Logs/LogGroup/LambdaFunctionAuditFormatCloudWatchEvent

    #-- CIS Amazon Web Services Foundations ---------------------------------------------

    # 1.1: Avoid the use of the "root" account
    # 3.3: Ensure a log metric filter and alarm exist for usage of "root" account
    - Base/Logs/MetricFilter/RootUserEventCount
    - Base/CloudWatch/Alarm/RootUserEventCount

    # 1.2: Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password
    - Base/Config/ConfigRule/AWSMFAEnabledForIAMConsoleAccess

    # 1.3: Ensure credentials unused for 90 days or greater are disabled
    # 1.4: Ensure access keys are rotated every 90 days or less
    - Base/Lambda/Function/DisableUnusedCredentials
    - Base/Lambda/Permission/DisableUnusedCredentials
    - Base/IAM/Role/LambdaFunctionDisableUnusedCredentials
    - Base/Logs/LogGroup/LambdaFunctionDisableUnusedCredentials
    - Base/Events/Rule/DisableUnusedCredentials

    # 1.5: Ensure IAM password policy requires at least one uppercase letter
    # 1.6: Ensure IAM password policy require at least one lowercase letter
    # 1.7: Ensure IAM password policy require at least one symbol
    # 1.8: Ensure IAM password policy require at least one number
    # 1.9: Ensure IAM password policy requires minimum length of 14 or greater
    # 1.10: Ensure IAM password policy prevents password reuse
    # 1.11: Ensure IAM password policy expires passwords within 90 days or less
    - Base/Config/ConfigRule/AWSIAMPasswordPolicy

    # 1.12: Ensure no root account access key exists
    - Base/Config/ConfigRule/AWSIAMRootAccessKeyCheck

    # 1.13: Ensure MFA is enabled for the "root" account
    - Base/Config/ConfigRule/AWSRootAccountMFAEnabled

    # 1.14: Ensure hardware MFA is enabled for the "root" account
    - Base/Config/ConfigRule/AWSRootAccountHardwareMFAEnabled

    # 1.16: Ensure IAM policies are attached only to groups or roles
    - Base/Config/ConfigRule/AWSIAMUserNoPoliciesCheck

    # 1.19: Ensure IAM instance roles are used for AWS resource access from instances
    - Base/Lambda/Function/ConfigInstanceRoleUse
    - Base/Lambda/Permission/ConfigInstanceRoleUse
    - Base/Logs/LogGroup/LambdaFunctionConfigInstanceRoleUse
    - Base/Config/ConfigRule/ConfigInstanceRoleUse

    # 1.22: Ensure IAM policies that allow full "*:*" administrative privileges are not created
    - Base/Lambda/Function/ConfigEvaluatePolicyPermissions
    - Base/Lambda/Permission/ConfigEvaluatePolicyPermissions
    - Base/Logs/LogGroup/LambdaFunctionConfigEvaluatePolicyPermissions
    - Base/Config/ConfigRule/ConfigEvaluatePolicyPermissions

    # 2.1: Ensure CloudTrail is enabled in all regions
    - Base/Config/ConfigRule/AWSCloudTrailEnabled
    - Base/Config/ConfigRule/AWSMultiRegionCloudTrailEnabled

    # 2.2: Ensure CloudTrail log file validation is enabled
    - Base/Config/ConfigRule/AWSCloudTrailLogFileValidationEnabled

    # 2.3: Ensure the S3 bucket CloudTrail logs to is not publicly accessible
    # 2.6: Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket
    - Base/Lambda/Function/ConfigEvaluateCloudTrailBucket
    - Base/Lambda/Permission/ConfigEvaluateCloudTrailBucket
    - Base/Logs/LogGroup/LambdaFunctionConfigEvaluateCloudTrailBucket
    - Base/Config/ConfigRule/ConfigEvaluateCloudTrailBucket

    # 2.4: Ensure CloudTrail trails are integrated with CloudWatch Logs
    - Base/Config/ConfigRule/AWSCloudTrailCloudWatchLogsEnabled

    # 2.5: Ensure AWS Config is enabled in all regions
    - Base/Lambda/Function/ConfigEvaluateConfigInAllRegions
    - Base/Lambda/Permission/ConfigEvaluateConfigInAllRegions
    - Base/Logs/LogGroup/LambdaFunctionConfigEvaluateConfigInAllRegions
    - Base/Config/ConfigRule/ConfigEvaluateConfigInAllRegions

    # 2.7: Ensure CloudTrail logs are encrypted at rest using KMS CMKs
    - Base/Config/ConfigRule/AWSCloudTrailEncryptionEnabled

    # 3.1: Ensure a log metric filter and alarm exist for unauthorized API calls
    - Base/Logs/MetricFilter/UnauthorizedAttemptCount
    - Base/CloudWatch/Alarm/UnauthorizedAttemptCount

    # 3.2: Ensure a log metric filter and alarm exist for Management Console sign-in without MFA
    - Base/Logs/MetricFilter/ConsoleSigninWithoutMFA
    - Base/CloudWatch/Alarm/ConsoleSigninWithoutMFA

    # 3.4: Ensure a log metric filter and alarm exist for IAM policy changes
    - Base/Events/Rule/AuditIAMPolicyChanges

    # 3.5: Ensure a log metric filter and alarm exist for CloudTrail configuration changes
    - Base/Events/Rule/AuditDetectCloudTrailChanges

    # 3.6: Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
    - Base/Logs/MetricFilter/ConsoleLoginFailures
    - Base/CloudWatch/Alarm/ConsoleLoginFailures

    # 3.7: Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
    - Base/Logs/MetricFilter/KMSCustomerKeyDeletion
    - Base/CloudWatch/Alarm/KMSCustomerKeyDeletion

    # 3.8: Ensure a log metric filter and alarm exist for S3 bucket policy changes
    - Base/Events/Rule/AuditDetectS3BucketPolicyChanges

    # 3.9: Ensure a log metric filter and alarm exist for AWS Config configuration changes
    - Base/Events/Rule/AuditDetectConfigChanges

    # 3.10: Ensure a log metric filter and alarm exist for security group changes
    - Base/Events/Rule/AuditDetectSecurityGroupChanges

    # 3.11: Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
    - Base/Events/Rule/AuditDetectNetworkACLChanges

    # 3.12: Ensure a log metric filter and alarm exist for changes to network gateways
    # 3.13: Ensure a log metric filter and alarm exist for route table changes
    # 3.14: Ensure a log metric filter and alarm exist for VPC changes
    - Base/Events/Rule/AuditDetectNetworkChangeEvents

##-------------------------------------------------------------------------------------------------
  Outputs:
    #-- SNS -----------------------------------------------------------------------------
    - Base/SNS/Topic/AuditTopicName
    - Base/SNS/Topic/AuditArn

##-------------------------------------------------------------------------------------------------
  Targets:
